/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.cvut.fit.geotrip;

import com.graphhopper.GraphHopper;
import com.graphhopper.routing.util.EncodingManager;
import java.awt.Frame;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author jan
 */
public class MapLoadDialog extends javax.swing.JDialog {

    /**
     * Creates new form MapImportDialog
     */
    public MapLoadDialog(Frame parent, boolean modal, String mapName) {
        super(parent, modal);
        
        initComponents();

        this.setLocation(parent.getLocation().x + parent.getSize().width / 2 - this.getSize().width / 2, 
                parent.getLocation().y + parent.getSize().height / 2 - this.getSize().height / 2);

        
        initGraphHoppers(mapName);
        labelInfo.setText("Načítám mapu: " + mapName + "... (může trvat několik minut)");
    }

    private void initGraphHoppers(final String mapName) {
        final Thread t1 = initGraphHopper(mapName, "car");
        final Thread t2 = initGraphHopper(mapName, "bike");
        final Thread t3 = initGraphHopper(mapName, "foot");

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                t1.start();
                t2.start();
                t3.start();

                try {
                    t1.join();
                    t2.join();
                    t3.join();
                } catch (InterruptedException ex) {
                    Logger.getLogger(MapLoadDialog.class.getName()).log(Level.SEVERE, null, ex);
                }

                dispose();
            }
        });
    }

    private Thread initGraphHopper(final String mapName, final String vehicle) {
        return new Thread() {
            @Override
            public void run() {
                GraphHopper gh = new GraphHopper().setGraphHopperLocation("data/gh/" + mapName + "/" + vehicle).setEncodingManager(new EncodingManager(vehicle)).setOSMFile(new File("data/maps/" + mapName + ".osm.pbf").getAbsolutePath()).forDesktop();
                gh.importOrLoad();
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Načítání mapy");
        setResizable(false);

        labelInfo.setText("info");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInfo)
                .addContainerGap(292, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInfo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelInfo;
    // End of variables declaration//GEN-END:variables
}
